on:
  release:
    types:
      - created

name: Continuous integration

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.44.1  # MSRV

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/release
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: System dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make libsqlite3-dev libgtk-3-dev

          mkdir -p ~/.cargo/release

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Create binary
        env:
          DESTDIR: '~/authenticator-rs-deb'
        run: |
          sudo mkdir -p $DESTDIR
          RELEASE_VERSION=${{ github.event.release.tag_name }} DESTDIR=$DESTDIR make debian-pkg

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: '${{ github.event.release.upload_url }}'
          asset_path: 'authenticator-rs-${{ github.event.release.tag_name }}-x86-64.deb'
          asset_name: 'authenticator-rs-${{ github.event.release.tag_name }}-x86-64.deb'
          asset_content_type: application/octet-stream
